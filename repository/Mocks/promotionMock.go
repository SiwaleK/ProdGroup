// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/SiwaleK/ProdGroup/repository (interfaces: PromotionRepository)

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	db "github.com/SiwaleK/ProdGroup/db/sqlc"
	gomock "github.com/golang/mock/gomock"
)

// MockPromotionRepository is a mock of PromotionRepository interface.
type MockPromotionRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPromotionRepositoryMockRecorder
}

// MockPromotionRepositoryMockRecorder is the mock recorder for MockPromotionRepository.
type MockPromotionRepositoryMockRecorder struct {
	mock *MockPromotionRepository
}

// NewMockPromotionRepository creates a new mock instance.
func NewMockPromotionRepository(ctrl *gomock.Controller) *MockPromotionRepository {
	mock := &MockPromotionRepository{ctrl: ctrl}
	mock.recorder = &MockPromotionRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPromotionRepository) EXPECT() *MockPromotionRepositoryMockRecorder {
	return m.recorder
}

// PostPromotion mocks base method.
func (m *MockPromotionRepository) PostPromotion(arg0 context.Context, arg1 db.PostPromotionTableParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostPromotion", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PostPromotion indicates an expected call of PostPromotion.
func (mr *MockPromotionRepositoryMockRecorder) PostPromotion(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostPromotion", reflect.TypeOf((*MockPromotionRepository)(nil).PostPromotion), arg0, arg1)
}

// PostPromotionAppliedItem mocks base method.
func (m *MockPromotionRepository) PostPromotionAppliedItem(arg0 context.Context, arg1 []db.PostPromotionAppliedParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostPromotionAppliedItem", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PostPromotionAppliedItem indicates an expected call of PostPromotionAppliedItem.
func (mr *MockPromotionRepositoryMockRecorder) PostPromotionAppliedItem(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostPromotionAppliedItem", reflect.TypeOf((*MockPromotionRepository)(nil).PostPromotionAppliedItem), arg0, arg1)
}
